<Window x:Class="Dialog.IOMonitor.Views.ChannelAddWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dialog.IOMonitor.Views"
        
        xmlns:con="clr-namespace:Dialog.IOMonitor.Services.ConverterService.ViewConverter" 
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:viewModels="clr-namespace:Dialog.IOMonitor.ViewModels"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        d:DataContext="{d:DesignInstance Type=viewModels:ChannelAddViewModel, IsDesignTimeCreatable=False}"
        
        mc:Ignorable="d"
        Title="Channel Add Window" Height="700" Width="800" WindowStartupLocation="CenterScreen" Background="#333333" Topmost="True">
    <Window.Resources>
        <con:IONameToBorderColorConverter x:Key="IONameToBorderColorConverter"/>
        <con:ControlEnabledToForgroundConverter x:Key="ControlEnabledToForgroundConverter"/>
        <con:MultiCommandParameterConverter x:Key="MultiCommandParameterConverter"/>
        <con:ControlEnabledToColor x:Key="ControlEnabledToColor"/>
        <con:ControlEnabledToOpacityConverter x:Key="ControlEnabledToOpacityConverter"/>
    </Window.Resources>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="Closing">
            <b:InvokeCommandAction Command="{Binding ClosingCommand}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <!-- IO Collection -->
            <RowDefinition Height="0.8*"/>
            <!-- Add, Close Btn -->
            <RowDefinition Height="0.2*"/>
        </Grid.RowDefinitions>

        <!-- IO Collection -->
        <Border Grid.Row="0" Margin="5" BorderBrush="DarkGray" BorderThickness="2">
            <Grid>
                <Grid.RowDefinitions>
                    <!-- Title -->
                    <RowDefinition Height="0.1*"/>
                    <!-- ListView -->
                    <RowDefinition Height="0.9*"/>
                </Grid.RowDefinitions>

                <!-- Title -->
                <Label Grid.Row="0" 
                       Foreground="LightGray" 
                       FontSize="24" FontWeight="Bold"
                       VerticalAlignment="Center" HorizontalAlignment="Left" 
                       Content=" I / O LIST"/>

                <!-- I / O Collection -->
                <ListView x:Name="IOCollection" Grid.Row="1" Margin="5" 
                          Background="#333333" BorderBrush="DarkGray" BorderThickness="2" 
                          VerticalContentAlignment="Top" 
                          ItemsSource="{Binding IODataCollection, Mode=TwoWay}" 
                          SelectedItem="{Binding SelectedIO, Mode=TwoWay}">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!-- IO Name -->
                                <StackPanel Grid.Row="0" Margin="5" Orientation="Vertical">
                                    <Border BorderBrush="{Binding ElementName=IOName, Path=Text, Converter={StaticResource IONameToBorderColorConverter}}" BorderThickness="2"/>
                                    <TextBlock x:Name="IOName" 
                                               Foreground="LightGray" FontSize="18" 
                                               VerticalAlignment="Center" HorizontalAlignment="Center"
                                               Text="{Binding IOData.Name}"/>
                                    <Border BorderBrush="{Binding ElementName=IOName, Path=Text, Converter={StaticResource IONameToBorderColorConverter}}" BorderThickness="1"/>
                                </StackPanel>
                                <!-- Channel Collection -->
                                <ListView 
                                    x:Name="ChannelCollection" 
                                    Grid.Row="1" 
                                    Margin="5" 
                                    Background="#333333" 
                                    BorderBrush="DarkGray" BorderThickness="2" 
                                    SelectionChanged="ChannelCollection_SelectionChanged"
                                    ItemsSource="{Binding ChannelCollection, Mode=TwoWay}" 
                                    SelectedItem="{Binding Path=DataContext.SelectedChannel, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=TwoWay}">
                                    <!--<b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseLeftButtonUp">
                                            <b:InvokeCommandAction Command="{Binding TestCommand}">
                                                <b:InvokeCommandAction.CommandParameter>
                                                    <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}">
                                                        <Binding ElementName="IOCollection" Path="ItemsSource"/>
                                                        <Binding ElementName="IOCollection" Path="SelectedItem"/>
                                                    </MultiBinding>
                                                </b:InvokeCommandAction.CommandParameter>
                                            </b:InvokeCommandAction>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>-->
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Columns="2" HorizontalAlignment="Center"/>
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <!--Channel-->
                                            <Label x:Name="Channel" Width="40" Height="40" 
                                                   FontSize="20" Foreground="{Binding IsEnable, Converter={StaticResource ControlEnabledToForgroundConverter}}"
                                                   VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                                                   Content="{Binding BitData.MyIndex}"/>

                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="Background" Value="{Binding IsEnable, Converter={StaticResource ControlEnabledToColor}}"/>
                                            <Setter Property="BorderBrush" Value="DarkGray"/>
                                            <Setter Property="Opacity" Value="{Binding IsEnable, Converter={StaticResource ControlEnabledToOpacityConverter}}"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="IsHitTestVisible" Value="{Binding IsEnable}"/>
                                            <Setter Property="IsSelected" Value="{Binding Selected}"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                </ListView>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Background" Value="#333333"/>
                            <Setter Property="BorderBrush" Value="DarkGray"/>
                            <Setter Property="BorderThickness" Value="0,0,2,0"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
        </Border>

        <!-- Add, Close Btn -->
        <Grid Grid.Row="2" HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!-- Add Btn -->
            <Button Grid.Column="0" Margin="5,5,10,5" Width="120" Height="80" 
                    FontSize="16" Content="Add" 
                    Command="{Binding BtnAddClickCommand}">
                <Button.CommandParameter>
                    <MultiBinding Converter="{StaticResource MultiCommandParameterConverter}">
                        <Binding Path="SelectedIO"/>
                        <Binding Path="SelectedChannel"/>
                    </MultiBinding>
                </Button.CommandParameter>
            </Button>

            <!-- Close Btn -->
            <Button Grid.Column="1" Margin="10,5,5,5" 
                    Width="120" Height="80" 
                    FontSize="16" Content="Close" 
                    Command="{Binding BtnCloseClickCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
        </Grid>
    </Grid>
</Window>
